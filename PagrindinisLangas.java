/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bakalauras;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.UIManager;
//import bakalauras.Bakalauras; 

/**
 *
 * @author Robert
 */



public class PagrindinisLangas extends javax.swing.JFrame {
        Bakalauras c= new Bakalauras();
        String URL, VER, PC, DB, PORT, USER, PASS;
        String[] combo= {"MSSQLSERVER", "SQLEXPRESS"};
        boolean check=false;
      private ArrayList<Lenteles> table;
      
      
      
      
      
    public PagrindinisLangas() {
        
        initComponents();
        
        JComboBox version = new JComboBox(combo);
        JTextField komppav = new JTextField();
        komppav.setColumns(30);
        JTextField dbpav = new JTextField();
        JTextField port = new JTextField();
        JTextField username = new JTextField();      
        JTextField password = new JPasswordField();

//        komppav.setText("DESKTOP-F354KEF");
//        dbpav.setText("master");
//        port.setText("1433");
//        username.setText("admin");
//        password.setText("12345678*");

Object[] message = {
    "SSMS Versija", version,
    "Kompiuterio arba serverio pavadinimas", komppav,
    "Duomenų bazės pavadinimas", dbpav,
    "Prievadas", port,
    "Administratoriaus prisijungimo vardas", username,
    "Administratoriaus prisijungimo slaptažodis", password
};
UIManager.put("OptionPane.cancelButtonText", "Atšaukti");

while(check==false){
    UIManager.put("OptionPane.okButtonText", "Prisijungti");
int option = JOptionPane.showConfirmDialog(null, message, "Prisijungimas prie duomenų bazės", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION) {
    VER = (String) version.getSelectedItem();
    
    PC = komppav.getText();
    DB = dbpav.getText();
    PORT = port.getText();
    USER = username.getText();
    PASS = password.getText();
    URL = "jdbc:sqlserver://"+PC+"\\"+VER+":"+PORT+";databaseName="+DB;
    check=c.Prisijungimas(DB, URL, USER, PASS);
    if (check==true) {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    } else {
        
        UIManager.put("OptionPane.okButtonText", "Bandyti dar kartą");
        JOptionPane.showMessageDialog(null,"Neteisingi prisijungimo duomenys","Klaida",JOptionPane.ERROR_MESSAGE);
    }
} else {
    System.out.println("Login canceled");
    //break;
    System.exit(0);
}

}
        
    }
    
     
 
    

  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Vardas = new javax.swing.JButton();
        Adresai = new javax.swing.JButton();
        Pilnas = new javax.swing.JButton();
        Pastai = new javax.swing.JButton();
        Saskaitos = new javax.swing.JButton();
        Korteles = new javax.swing.JButton();
        Koordinates = new javax.swing.JButton();
        IP = new javax.swing.JButton();
        Exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Vardas.setText("Vardų paieška");
        Vardas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VardasActionPerformed(evt);
            }
        });

        Adresai.setText("Adresų paieška");
        Adresai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdresaiActionPerformed(evt);
            }
        });

        Pilnas.setText("Pilnas skanavimas");
        Pilnas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilnasActionPerformed(evt);
            }
        });

        Pastai.setText("Elektroninių paštų paieška");
        Pastai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PastaiActionPerformed(evt);
            }
        });

        Saskaitos.setText("Banko sąskaitų paieška");
        Saskaitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaskaitosActionPerformed(evt);
            }
        });

        Korteles.setText("Asmens kodų paieška");
        Korteles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KortelesActionPerformed(evt);
            }
        });

        Koordinates.setText("Tikslių koordinačių paieška");
        Koordinates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KoordinatesActionPerformed(evt);
            }
        });

        IP.setText("Ip adresų paieška");
        IP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPActionPerformed(evt);
            }
        });

        Exit.setText("Išeiti iš programos");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Vardas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Adresai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(Pastai, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(Saskaitos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(Korteles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(Koordinates, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(IP, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(Exit, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Pilnas, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(Vardas, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Adresai, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Pastai, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Saskaitos, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Korteles, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Koordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(Pilnas, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(453, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VardasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VardasActionPerformed
     
        
  
String vardusk= c.VarduPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+vardusk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių vardų paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    vardusk=c.GiliVarduPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Vardų paieškos duomenų bazėje rezultatai: \n\n"+vardusk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}

    }//GEN-LAST:event_VardasActionPerformed

    private void AdresaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdresaiActionPerformed

String adresusk= c.AdresuPaieska(DB, URL, USER, PASS);
UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+adresusk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių adresų paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    adresusk=c.GiliAdresuPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Adresų paieškos duomenų bazėje rezultatai: \n\n"+adresusk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_AdresaiActionPerformed

    private void PilnasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilnasActionPerformed
        String vardusk= c.VarduPaieska(DB, URL, USER, PASS);
String adresusk= c.AdresuPaieska(DB, URL, USER, PASS);
String pastusk= c.PastuPaieska(DB, URL, USER, PASS);
String saskaitusk= c.SaskaituPaieska(DB, URL, USER, PASS);
String kortelessk= c.TapatybesPaieska(DB, URL, USER, PASS);
String koordsk= c.KoordinaciuPaieska(DB, URL, USER, PASS);
String ipsk= c.IpPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta asmeninių vardų stulpelių su panašiais pavadinimais: "+vardusk+"\n"+
        "Rasta adresų stulpelių su pašiais pavadinimais: "+adresusk+"\n"+
        "Rasta elektroninių paštų adresų stulpelių su pašiais pavadinimais: "+pastusk+"\n"+
        "Rasta banko sąskaitų stulpelių su pašiais pavadinimais: "+saskaitusk+"\n"+
        "Rasta asmens asmens kodų stulpelių su pašiais pavadinimais: "+kortelessk+"\n"+
        "Rasta tikslių koordinačių stulpelių su pašiais pavadinimais: "+koordsk+"\n"+
        "Rasta IP adresų stulpelių su pašiais pavadinimais: "+ipsk+"\n"+
        "\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių pilnas paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Pilno skanavimo rezultatai:\n\nVardų paieškos duomenų bazėje rezultatai: \n\n"+c.GiliVarduPaieska(DB, URL, USER, PASS)+
              "\nAdresų paieškos duomenų bazėje rezultatai: \n\n" + c.GiliAdresuPaieska(DB, URL, USER, PASS)+
              "\nE-paštų paieškos duomenų bazėje rezultatai: \n\n" + c.GiliPastuPaieska(DB, URL, USER, PASS)+
              "\nBanko sąskaitų paieškos duomenų bazėje rezultatai: \n\n" + c.GiliSaskaituPaieska(DB, URL, USER, PASS)+
              "\nAsmens kodų paieškos duomenų bazėje rezultatai: \n\n" + c.GiliTapatybesPaieska(DB, URL, USER, PASS)+
              "\nTikslių koordinačių paieškos duomenų bazėje rezultatai: \n\n" + c.GiliKoordinaciuPaieska(DB, URL, USER, PASS)+
              "\nIP paieškos duomenų bazėje rezultatai: \n\n" + c.GiliIpPaieska(DB, URL, USER, PASS));
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_PilnasActionPerformed

    private void PastaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PastaiActionPerformed
        String pastusk= c.PastuPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+pastusk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių paštų paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    pastusk=c.GiliPastuPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Paštų paieškos duomenų bazėje rezultatai: \n\n"+pastusk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_PastaiActionPerformed

    private void SaskaitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaskaitosActionPerformed
        String saskaitusk= c.SaskaituPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+saskaitusk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių banko sąskaitų paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    saskaitusk=c.GiliSaskaituPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Bankų saskaitų paieškos duomenų bazėje rezultatai: \n\n"+saskaitusk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_SaskaitosActionPerformed

    private void KortelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KortelesActionPerformed
        String kortelessk= c.TapatybesPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.okButtonText", "Atlikta");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+kortelessk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių banko sąskaitų paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    kortelessk=c.GiliTapatybesPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Bankų saskaitų paieškos duomenų bazėje rezultatai: \n\n"+kortelessk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_KortelesActionPerformed

    private void KoordinatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KoordinatesActionPerformed
        String koordsk= c.KoordinaciuPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+koordsk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių koordinačių paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    koordsk=c.GiliKoordinaciuPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("Koordinačių paieškos duomenų bazėje rezultatai: \n\n"+koordsk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_KoordinatesActionPerformed

    private void IPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPActionPerformed
        String ipsk= c.IpPaieska(DB, URL, USER, PASS);

UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Atlikti paiešką");
int option = JOptionPane.showConfirmDialog(null, "Rasta stulpelių su panašiais pavadinimais: "+ipsk+"\n Ar norite atlikti gilesnę paiešką? ", "Stulpelių IP adresų paieškos rezultatas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
if (option == JOptionPane.OK_OPTION){
    ipsk=c.GiliIpPaieska(DB, URL, USER, PASS);
    try {
      FileWriter Writer = new FileWriter("Ataskaita.txt");
      Writer.write("IP paieškos duomenų bazėje rezultatai: \n\n"+ipsk);
      Writer.close();
    } catch (IOException e) {
    }
    UIManager.put("OptionPane.okButtonText", "Uždaryti langą");
    JOptionPane.showMessageDialog(null,"Sukurtas Ataskaita.txt failas su gilios paieškos rezultatais.","Atlikta!",JOptionPane.PLAIN_MESSAGE);
}
    }//GEN-LAST:event_IPActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        UIManager.put("OptionPane.cancelButtonText", "Atšaukti");
UIManager.put("OptionPane.okButtonText", "Taip");
int option = JOptionPane.showConfirmDialog(null, "Ar tikrai norite išeiti iš programos", "Patvirtinimas", 
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
if (option == JOptionPane.OK_OPTION){
        this.dispose();}
    }//GEN-LAST:event_ExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PagrindinisLangas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PagrindinisLangas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PagrindinisLangas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PagrindinisLangas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PagrindinisLangas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adresai;
    private javax.swing.JButton Exit;
    private javax.swing.JButton IP;
    private javax.swing.JButton Koordinates;
    private javax.swing.JButton Korteles;
    private javax.swing.JButton Pastai;
    private javax.swing.JButton Pilnas;
    private javax.swing.JButton Saskaitos;
    private javax.swing.JButton Vardas;
    // End of variables declaration//GEN-END:variables
}
